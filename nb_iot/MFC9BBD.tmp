#ifndef __NB_APP_H
#define __NB_APP_H

#ifdef __cplusplus
extern "C"
{
#endif
   
/*The following program is modified by the user according to the hardware device, otherwise the driver cannot run.*/

/* Includes ------------------------------------------------------------------*/

#include "nb_board.h"
#include "bsp_fsm/bsp_fsm.h"

typedef enum
{
  NB_NONE,
  NB_INIT,      
  NB_MODULE,
  NB_SIGN,
  NB_UDP_CR,    
  NB_UDP_CL,    
  NB_UDP_REG,   
  NB_UDP_ST,
  NB_UDP_RE,    
  NB_CoAP_SEVER,
  NB_CoAP_ST,
  NB_CoAP_RE,   
  NB_RESET,      
  NB_END
}NB_STATE_e;


void NB_IOT_UART_Receive(void);
void NB_IOT_Init(void);
void NB_IOT_Loop(void);
void NB_IOT_SendData(char* pdata, int len);
int FSM_NB_None(pStateMachine machine, SM_VAR * sm_var);
int FSM_NB_Init(pStateMachine machine, SM_VAR * sm_var);
int FSM_NB_GetSign(pStateMachine machine, SM_VAR * sm_var);
int FSM_NB_GetModuleInfo(pStateMachine machine, SM_VAR * sm_var);
int FSM_NB_CreateUDP(pStateMachine machine, SM_VAR * sm_var);
int FSM_NB_CloseUDP(pStateMachine machine, SM_VAR * sm_var);
int FSM_NB_UDPRegister(pStateMachine machine, SM_VAR * sm_var);
int FSM_NB_UDPSendData(pStateMachine machine, SM_VAR * sm_var);
int FSM_NB_Reset(pStateMachine machine, SM_VAR * sm_var);
int FSM_NB_End(pStateMachine machine, SM_VAR * sm_var);

extern NB_Config  nb_config;

/*The above procedure is modified by the user according to the hardware device, otherwise the driver cannot run.*/

#ifdef __cplusplus
}
#endif

#endif   /* __NB_APP_H */
